/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package translator.of.developers;

import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Rustem Azimov
 */
public class TranslatorOfDevelopersv extends javax.swing.JFrame {
    private Function funcs = new Function();
    private final String[] OPTIONS = new String[]{
      "Select",
      "MD5",
      "SHA1",
      "SHA256",
      "SHA512",
      "BCRYPT",
      "PBKDF2"
    };
    /**
     * Creates new form TranslatorOfDevelopersv
     */
    public TranslatorOfDevelopersv() {
        super("Translator of Developers");
        initComponents();
        setResizable(false);
    }
    private void copy(String txt){
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(txt), null);
        showMessage("Copied to Clipboard", "Info");
    }    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        inputPane = new javax.swing.JEditorPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        outputPane = new javax.swing.JEditorPane();
        choosFileButton = new javax.swing.JButton();
        methodsBox = new javax.swing.JComboBox<>();
        calculateButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        copyLabel = new javax.swing.JLabel();
        fileReadyLabel = new javax.swing.JLabel();
        filePathField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputPane.setToolTipText("Enter plain text here");
        inputPane.setToolTipText("Enter Plain Text Here");
        jScrollPane5.setViewportView(inputPane);

        outputPane.setEnabled(false);
        outputPane.setToolTipText("Hash value for given text will appear here");
        jScrollPane6.setViewportView(outputPane);

        choosFileButton.setText("Choose file");
        choosFileButton.setToolTipText("Choose a .txt file for uploading hash values");
        choosFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosFileButtonActionPerformed(evt);
            }
        });

        methodsBox.setModel(new javax.swing.DefaultComboBoxModel<>(this.OPTIONS));
        methodsBox.setToolTipText("Select a method for hashing");
        methodsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                methodsBoxActionPerformed(evt);
            }
        });

        calculateButton.setText("Calculate Hash Values");
        calculateButton.setToolTipText("Generate hash values for the given text with all hash function. Then upload results to file");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        copyButton.setText("Copy");
        copyButton.setToolTipText("Copy to Clipboard");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        filePathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(fileReadyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(filePathField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(choosFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(methodsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(copyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(166, 166, 166))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(copyButton)
                        .addGap(19, 19, 19)
                        .addComponent(copyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(methodsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choosFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileReadyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void methodsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_methodsBoxActionPerformed
        // TODO add your handling code here: 
        String method = (String)((JComboBox) evt.getSource()).getSelectedItem();
        if(method.equals("Select"))
        {
            this.outputPane.setText("");
        }
        else
        {
            this.outputPane.setText(funcs.hashText(this.inputPane.getText(), method));
        }
    }//GEN-LAST:event_methodsBoxActionPerformed
    private void showMessage(String txt, String title){
        JOptionPane.showMessageDialog(this.jPanel2, txt, title, JOptionPane.INFORMATION_MESSAGE);
    }
    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        // TODO add your handling code here:
        String txt = this.outputPane.getText();
        if(!txt.equals(""))
        {
            copy(txt);
        }
            
            
    }//GEN-LAST:event_copyButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        // TODO add your handling code here:
        String path = this.filePathField.getText();
        if(validatePath(path))
        {
            if(!this.filePathField.equals(""))
            {
                try {
                    new MyFileWriter().exportToFile(prepareResultForExport(), path);
                } catch (IOException ex) {
                    showMessage("File not found", "Info");
                }
            }
        showMessage("Data was generated.\nWas uploaded into file", "Info");
        }
    }//GEN-LAST:event_calculateButtonActionPerformed
    private boolean validatePath(String path){
        if(path.equals("")){
            showMessage("File not selected", "Info");
            return false;
        }
        else if(!path.endsWith(".txt"))
        {
            showMessage("Only .txt files are supported", "Info");
            return false;
        }
        return true;
        
    }
    private void choosFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosFileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose a file to read words");
        int status = fileChooser.showOpenDialog(null);
        if(status == JFileChooser.APPROVE_OPTION)
        {
            File destFile = fileChooser.getSelectedFile();
            this.filePathField.setText(destFile.getAbsolutePath());
          }
    }//GEN-LAST:event_choosFileButtonActionPerformed

    private void filePathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathFieldActionPerformed
    private String[][] prepareResultForExport(){
        String[][] data = new String[7][];
        data[0] = new String[]{"Actual Text", this.inputPane.getText()};
        for(int i = 1; i < data.length;i++){
            data[i] = new String[]{this.OPTIONS[i], this.funcs.hashText(this.inputPane.getText(), this.OPTIONS[i])};
        }
        return data;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TranslatorOfDevelopersv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TranslatorOfDevelopersv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton choosFileButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel copyLabel;
    private javax.swing.JTextField filePathField;
    private javax.swing.JLabel fileReadyLabel;
    private javax.swing.JEditorPane inputPane;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JComboBox<String> methodsBox;
    private javax.swing.JEditorPane outputPane;
    // End of variables declaration//GEN-END:variables

   
   
}
